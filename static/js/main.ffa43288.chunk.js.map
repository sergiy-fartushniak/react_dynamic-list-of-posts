{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/posts.js","components/Loader/Loader.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectedPostId","setSelectedPostId","className","map","post","key","id","userId","title","type","onClick","BASE_URL","getUserPosts","a","fetch","response","json","result","data","filter","getPostDetails","postId","postDetails","Loader","getPostComments","comments","comment","deletePostComment","commentId","method","addPostComment","newPostComment","body","JSON","stringify","NewCommentForm","setComments","useState","name","setName","email","setEmail","setBody","onSubmit","event","preventDefault","newComment","coment","addNewComment","value","onChange","target","placeholder","PostDetails","setPost","commentsVisible","setCommentsVisible","useEffect","addDetails","addComments","deleteComment","length","App","setPosts","setUserId","addPosts","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffa43288.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  posts,\n  selectedPostId,\n  setSelectedPostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              {`[User #${post.userId}]:`}\n            </b>\n            {post.title}\n          </div>\n          {selectedPostId === post.id\n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(post.id)}\n              >\n                Open\n              </button>\n            )}\n\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const result = await response.json();\n  const posts = await result.data;\n\n  if (userId !== 0) {\n    return posts.filter(post => userId === post.userId);\n  }\n\n  return posts;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const result = await response.json();\n  const postDetails = await result.data;\n\n  return postDetails;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const result = await response.json();\n  const comments = await result.data;\n\n  if (postId !== 0) {\n    return comments.filter(comment => postId === comment.postId);\n  }\n\n  return comments;\n};\n\nexport const deletePostComment = async(commentId) => {\n  await fetch(`${BASE_URL}/comments/${commentId}`,\n    { method: 'DELETE' });\n};\n\nexport const addPostComment = async(newPostComment) => {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(newPostComment),\n  });\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addPostComment, getPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      name,\n      email,\n      body,\n      postId: selectedPostId,\n    };\n\n    const addNewComment = async(coment) => {\n      await addPostComment(coment);\n      setComments(await getPostComments(selectedPostId));\n    };\n\n    addNewComment(newComment);\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPostDetails } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { deletePostComment, getPostComments } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentsVisible, setCommentsVisible] = useState(true);\n\n  useEffect(() => {\n    const addDetails = async() => setPost(\n      await getPostDetails(selectedPostId),\n    );\n\n    const addComments = async() => setComments(\n      await getPostComments(selectedPostId),\n    );\n\n    addDetails();\n    addComments();\n  }, [selectedPostId, commentsVisible]);\n\n  const deleteComment = async(commentId) => {\n    await deletePostComment(commentId);\n    setComments(\n      await getPostComments(selectedPostId),\n    );\n  };\n\n  return (\n    !post\n      ? (\n        <Loader />\n      ) : (\n        <div className=\"PostDetails\">\n          <h2>Post details:</h2>\n\n          <section className=\"PostDetails__post\">\n            {post\n            && <p>{post.body}</p>}\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              onClick={() => setCommentsVisible(!commentsVisible)}\n              className=\"button\"\n            >\n              {`${commentsVisible\n                ? 'Hide'\n                : 'Show'} ${comments.length} comments`}\n            </button>\n            {commentsVisible\n            && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n\n                  <li className=\"PostDetails__list-item\" key={comment.id}>\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                selectedPostId={selectedPostId}\n                setComments={setComments}\n              />\n            </div>\n          </section>\n        </div>\n      )\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    const addPosts = async() => setPosts(await getUserPosts(userId));\n\n    addPosts();\n  }, [userId]);\n\n  const handleChange = (event) => {\n    setUserId(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            onChange={handleChange}\n            value={userId}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId\n            ? (\n              <PostDetails selectedPostId={selectedPostId} />\n            ) : (\n              <h2>Please choose post</h2>\n            )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}